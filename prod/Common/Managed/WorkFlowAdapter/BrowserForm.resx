<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Af//8AP///gH///8D////h///////w==
</value>
  </data>
</root>